import React, { useState, useEffect } from "react";
import { useParams } from "react-router-dom";
import { FaMapMarkerAlt, FaUser, FaClock } from "react-icons/fa";

// Slot and day maps
const slotMap = {
  1: "8H - 9H",
  2: "10H - 11H",
  3: "12H - 13H",
  4: "14H - 15H",
  5: "16H - 17H",
  6: "18H - 19H",
  7: "20H - 21H",
};

const dayOfWeekMap = {
  0: "Ch·ªß Nh·∫≠t",
  1: "Th·ª© Hai",
  2: "Th·ª© Ba",
  3: "Th·ª© T∆∞",
  4: "Th·ª© NƒÉm",
  5: "Th·ª© S√°u",
  6: "Th·ª© B·∫£y",
};

const serviceDetailsMap = {
  1: "D·ªçn d·∫πp theo gi·ªù", 2: "D·ªçn d·∫πp ƒë·ªãnh k·ª≥", 3: "T·ªïng v·ªá sinh nh√† c·ª≠a", 4: "D·ªçn d·∫πp sau s·ª± ki·ªán/t·∫øt",
  5: "Gi·ªØ tr·∫ª theo gi·ªù", 6: "Gi·ªØ tr·∫ª t·∫°i nh√† nguy√™n ng√†y", 7: "ChƒÉm s√≥c ng∆∞·ªùi cao tu·ªïi t·∫°i nh√†",
  8: "N·∫•u ƒÉn theo b·ªØa", 9: "N·∫•u ƒÉn theo tu·∫ßn/th√°ng", 10: "Mua s·∫Øm th·ª±c ph·∫©m & l√™n th·ª±c ƒë∆°n",
  11: "Gi·∫∑t ·ªßi theo kg", 12: "·ª¶i qu·∫ßn √°o theo b·ªô", 13: "Gi·∫∑t h·∫•p cao c·∫•p", 14: "ChƒÉm s√≥c c√¢y c·∫£nh",
  15: "T∆∞·ªõi c√¢y, c·∫Øt t·ªâa h√†ng tu·∫ßn", 16: "T·∫Øm & c·∫Øt t·ªâa l√¥ng th√∫ c∆∞ng", 17: "S·ª≠a ch·ªØa ƒëi·ªán n∆∞·ªõc",
  18: "S∆°n s·ª≠a n·ªôi th·∫•t nh·ªè", 19: "Th·ª£ s·ª≠a ch·ªØa theo gi·ªù", 20: "Gi√∫p vi·ªác theo y√™u c·∫ßu (d·ªãch v·ª• VIP)",
  21: "D·ªãch v·ª• gi√∫p vi·ªác theo th√°ng", 22: "H·ªó tr·ª£ v·∫≠n chuy·ªÉn ƒë·ªì ƒë·∫°c nh·∫π",
};

function JobDetailsPage() {
  const { id } = useParams();
  const [job, setJob] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const authToken = localStorage.getItem("authToken");

    fetch(`http://localhost:5280/api/Job/GetJobDetailByID?id=${id}`, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${authToken}`,
      },
    })
      .then((res) => res.json())
      .then((data) => {
        setJob(data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("Error:", err);
        setLoading(false);
      });
  }, [id]);

  const formatDays = (days) => days?.map((d) => dayOfWeekMap[d]).join(", ") || "Kh√¥ng r√µ";
  const formatSlots = (slots) => slots?.map((s) => slotMap[s]).join(", ") || "Kh√¥ng r√µ";
  const formatServices = (ids) =>
    ids?.map((id) => serviceDetailsMap[id] ?? `D·ªãch v·ª• kh√¥ng r√µ (ID: ${id})`).join(", ") || "Kh√¥ng r√µ";

  if (loading) {
    return <div className="text-center py-5">ƒêang t·∫£i th√¥ng tin c√¥ng vi·ªác...</div>;
  }

  if (!job) {
    return <div className="text-center text-danger py-5">Kh√¥ng t√¨m th·∫•y th√¥ng tin c√¥ng vi·ªác.</div>;
  }

  return (
    <div className="container py-4">
      <div className="row">
        {/* Left Column */}
        <div className="col-lg-8">
          {/* Hero Section */}
          <div className="card shadow-sm border-0 mb-4 p-4 bg-light">
            <h2 className="fw-bold mb-3">{job.jobName}</h2>
            <div className="mb-2 text-muted">
              <FaUser className="me-2" />
              Gia ƒë√¨nh ID: <strong>{job.familyID}</strong>
              <FaMapMarkerAlt className="ms-4 me-2" />
              {job.location}
            </div>
            <h4 className="fw-bold text-warning mb-3">
              {job.price ? `${job.price.toLocaleString()} VND` : "Ch∆∞a c·∫≠p nh·∫≠t"}
            </h4>
            <p className="text-muted">
              <FaClock className="me-2" />
              T·ª´ <strong>{job.startDate?.split("T")[0]}</strong> ƒë·∫øn <strong>{job.endDate?.split("T")[0]}</strong>
            </p>
          </div>

          {/* Job Details Section */}
          <div className="card shadow-sm border-0 mb-4 p-4">
            <h5 className="fw-bold mb-3">üìù Chi ti·∫øt c√¥ng vi·ªác</h5>
            <ul className="list-unstyled mb-2">
              <li><strong>D·ªãch v·ª•:</strong> {formatServices(job.serviceIDs)}</li>
              <li><strong>L·ªãch l√†m vi·ªác:</strong> {formatDays(job.dayofWeek)} ‚Äî {formatSlots(job.slotIDs)}</li>
              <li><strong>Y√™u c·∫ßu ƒë·∫∑c bi·ªát:</strong> {job.description || "Kh√¥ng c√≥"}</li>
            </ul>
          </div>

          {/* Action Buttons */}
          <div className="d-flex gap-3">
            <button className="btn btn-warning text-white w-50 fw-semibold">·ª®ng tuy·ªÉn ngay</button>
            <button className="btn btn-outline-secondary w-50" disabled>Nh·∫Øn tin cho Gia ƒë√¨nh</button>
          </div>
        </div>

        {/* Right Column - Sidebar */}
        <div className="col-lg-4">
          <div className="card shadow-sm border-0 p-4 bg-white">
            <h5 className="fw-bold mb-3">üìå Th√¥ng tin th√™m</h5>
            <p className="mb-1 text-muted">Ch∆∞a c√≥ d·ªØ li·ªáu ƒë√°nh gi√° ho·∫∑c li√™n h·ªá.</p>
            <hr />
            <p className="small text-muted">Th√¥ng tin s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t khi gia ƒë√¨nh ho√†n t·∫•t h·ªì s∆°.</p>
          </div>
        </div>
      </div>
    </div>
  );
}

export default JobDetailsPage;
